{
  "swagger": "2.0",
  "info": {
    "title": "room.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RoomService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/rooms": {
      "get": {
        "summary": "Get rooms by user",
        "description": "Get all rooms that the user is in",
        "operationId": "RoomService_GetRoomsByUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiGetRoomsByUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Room"
        ]
      },
      "post": {
        "summary": "Create room",
        "description": "Create a new room",
        "operationId": "RoomService_CreateRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiCreateRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/roomapiCreateRoomRequest"
            }
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/api/v1/rooms/{roomId}": {
      "delete": {
        "summary": "Delete room",
        "description": "Delete room",
        "operationId": "RoomService_DeleteRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiDeleteRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Room"
        ]
      },
      "put": {
        "summary": "Update room",
        "description": "Update room name and film",
        "operationId": "RoomService_UpdateRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiUpdateRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomServiceUpdateRoomBody"
            }
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/api/v1/rooms/{roomId}/invite": {
      "post": {
        "summary": "Invite to room",
        "description": "Invite users to a room",
        "operationId": "RoomService_InviteToRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiInviteToRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomServiceInviteToRoomBody"
            }
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/api/v1/rooms/{roomId}/messages": {
      "get": {
        "summary": "Enter room",
        "description": "Enter a room and receive messages",
        "operationId": "RoomService_EnterRoom",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/roomapiMessage"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of roomapiMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Room"
        ]
      },
      "post": {
        "summary": "Send message",
        "description": "Send a message to a room",
        "operationId": "RoomService_SendMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiSendMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomServiceSendMessageBody"
            }
          }
        ],
        "tags": [
          "Room"
        ]
      }
    },
    "/api/v1/rooms/{roomId}/users": {
      "get": {
        "summary": "Get users by room id",
        "description": "Get all user ids in a room",
        "operationId": "RoomService_GetUserIDsByRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomapiGetUserIDsByRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Room"
        ]
      }
    }
  },
  "definitions": {
    "RoomServiceInviteToRoomBody": {
      "type": "object",
      "properties": {
        "participantIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RoomServiceSendMessageBody": {
      "type": "object",
      "properties": {
        "senderId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "RoomServiceUpdateRoomBody": {
      "type": "object",
      "properties": {
        "roomName": {
          "type": "string"
        },
        "filmId": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "roomapiCreateRoomRequest": {
      "type": "object",
      "properties": {
        "participantIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roomName": {
          "type": "string"
        }
      }
    },
    "roomapiCreateRoomResponse": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "roomId": {
          "type": "string"
        }
      }
    },
    "roomapiDeleteRoomResponse": {
      "type": "object"
    },
    "roomapiGetRoomsByUserResponse": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/roomapiRoom"
          }
        }
      }
    },
    "roomapiGetUserIDsByRoomResponse": {
      "type": "object",
      "properties": {
        "participantIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "roomapiInviteToRoomResponse": {
      "type": "object"
    },
    "roomapiMessage": {
      "type": "object",
      "properties": {
        "senderId": {
          "type": "string"
        },
        "roomId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "roomapiRoom": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "participantsCount": {
          "type": "integer",
          "format": "int32"
        },
        "filmTitle": {
          "type": "string"
        },
        "filmPoster": {
          "type": "string"
        }
      }
    },
    "roomapiSendMessageResponse": {
      "type": "object"
    },
    "roomapiUpdateRoomResponse": {
      "type": "object"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
