{
  "swagger": "2.0",
  "info": {
    "title": "user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "summary": "Login user.",
        "description": "Login user and return session token.",
        "operationId": "UserService_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiLoginUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/register": {
      "post": {
        "summary": "Register new user.",
        "description": "Register new user and add it to the database.",
        "operationId": "UserService_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiRegisterUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiRegisterUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user": {
      "put": {
        "summary": "Update user data.",
        "description": "Update user data and return new user data.",
        "operationId": "UserService_ChangeUserData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiChangeUserDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiChangeUserDataRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user/password": {
      "put": {
        "summary": "Change user password.",
        "description": "Change user password.",
        "operationId": "UserService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiChangePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user/token": {
      "post": {
        "summary": "Refresh user tokens.",
        "description": "Get new pair of refresh and access tokens.",
        "operationId": "UserService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/avatar/{filePath}": {
      "get": {
        "summary": "Get user avatar",
        "description": "Get user avatar",
        "operationId": "UserService_GetAvatar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiGetAvatarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/friends": {
      "get": {
        "summary": "Get friends",
        "description": "Get all user friends",
        "operationId": "UserService_GetFriends",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiGetFriendsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Add friends",
        "description": "Add a list of frieds",
        "operationId": "UserService_AddFriends",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userapiAddFriendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userapiAddFriendRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userapiAddFriendRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "userapiAddFriendResponse": {
      "type": "object"
    },
    "userapiChangePasswordRequest": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "userapiChangePasswordResponse": {
      "type": "object"
    },
    "userapiChangeUserDataRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "userapiChangeUserDataResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "userapiFriend": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "userapiGetAvatarResponse": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "userapiGetFriendsResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userapiFriend"
          }
        }
      }
    },
    "userapiLoginUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userapiLoginUserResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "userapiRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "userapiRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "userapiRegisterUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "userapiRegisterUserResponse": {
      "type": "object"
    }
  }
}
