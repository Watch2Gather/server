// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package postgresql

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type AppMessage struct {
	ID        uuid.UUID `json:"id"`
	RoomID    uuid.UUID `json:"room_id"`
	UserID    uuid.UUID `json:"user_id"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

type AppMovie struct {
	ID          uuid.UUID      `json:"id"`
	Title       string         `json:"title"`
	Description string         `json:"description"`
	KpRating    sql.NullString `json:"kp_rating"`
	ImdbRating  sql.NullString `json:"imdb_rating"`
	KpID        sql.NullInt32  `json:"kp_id"`
	Year        int32          `json:"year"`
	Preview     sql.NullString `json:"preview"`
	FileName    string         `json:"file_name"`
	Country     string         `json:"country"`
	ReviewCount sql.NullInt32  `json:"review_count"`
}

type AppRoom struct {
	ID       uuid.UUID     `json:"id"`
	Name     string        `json:"name"`
	OwnerID  uuid.UUID     `json:"owner_id"`
	MovieID  uuid.NullUUID `json:"movie_id"`
	Timecode sql.NullTime  `json:"timecode"`
}

type AppUser struct {
	ID       uuid.UUID      `json:"id"`
	Username string         `json:"username"`
	Email    string         `json:"email"`
	PwdHash  string         `json:"pwd_hash"`
	Avatar   sql.NullString `json:"avatar"`
}

type AppUsersMovie struct {
	MovieID uuid.UUID `json:"movie_id"`
	UserID  uuid.UUID `json:"user_id"`
}

type AppUsersRoom struct {
	RoomID uuid.UUID `json:"room_id"`
	UserID uuid.UUID `json:"user_id"`
}
